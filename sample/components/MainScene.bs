' Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.
' This product includes software developed at Datadog (https://www.datadoghq.com/).
' Copyright 2022-Today Datadog, Inc.

import "pkg:/source/exploding.bs"
import "pkg:/source/roku_modules/datadogroku/datadogSdk.brs"
import "pkg:/source/roku_modules/datadogroku/internalLogger.brs"
import "pkg:/source/roku_modules/datadogroku/timeUtils.brs"

sub init()
    datadogroku_ddLogThread("MainScene.init()")
    m.top.backgroundURI = "pkg:/images/main_bg_hd.jpg"
    m.top.setFocus(true)

    m.videoScreen = m.top.findNode("videoScreen")
    m.debugScreen = m.top.findNode("debugScreen")

    if (m.global.datadogUploader = invalid)
        datadogroku_ddLogWarning("No RUM agent, creating one")
        m.global.addFields({ datadogUploader: CreateObject("roSGNode", "datadogroku_MultiTrackUploaderTask") })
        m.global.datadogUploader.clientToken = m.global.credentials.datadogClientToken
    endif

    if (m.global.rumAgent = invalid)
        datadogroku_ddLogWarning("No RUM agent, creating one")
        m.global.addFields({ rumAgent: CreateObject("roSGNode", "datadogroku_RumAgent") })
        m.global.rumAgent.endpointHost = "rum.browser-intake-datadoghq.com"
        m.global.rumAgent.clientToken = m.global.credentials.datadogClientToken
        m.global.rumAgent.applicationId = m.global.credentials.datadogApplicationId
        m.global.rumAgent.serviceName = "roku-sample"
        m.global.rumAgent.uploader = m.global.datadogUploader
    end if

    if (m.global.logsAgent = invalid)
        datadogroku_ddLogWarning("No RUM agent, creating one")
        m.global.addFields({ logsAgent: CreateObject("roSGNode", "datadogroku_LogsAgent") })
        m.global.logsAgent.endpointHost = "logs.browser-intake-datadoghq.com"
        m.global.logsAgent.clientToken = m.global.credentials.datadogClientToken
        m.global.logsAgent.serviceName = "roku-sample"
        m.global.logsAgent.envName = "staging"
        m.global.logsAgent.uploader = m.global.datadogUploader
    end if

    switchScreen()
end sub

function onKeyEvent(key as string, press as boolean) as boolean
    datadogroku_ddLogVerbose("MainScreen.onKeyEvent(" + key + ", " + press.toStr() + ")")
    if ((key = "options" or key = "back") and press)
        m.global.rumAgent@.addAction({ target: "options", type: "click" })
        switchScreen()
        return true
    end if
    return false
end function

sub switchScreen()
    if (m.debugScreen.visible)
        m.global.logsAgent@.logOk("Switching screen to video", { screen: "Debug" })
        m.global.rumAgent@.startView("VideoScreen", "components/screens/VideoScreen.xml")
        m.debugScreen.visible = false
        m.debugScreen.setFocus(false)
        m.videoScreen.visible = true
        m.videoScreen.setFocus(true)
    else
        m.global.logsAgent@.logOk("Switching screen to debug", { screen: "Video" })
        m.global.rumAgent@.startView("DebugScreen", "components/screens/DebugScreen.xml")
        m.videoScreen.visible = false
        m.videoScreen.setFocus(false)
        m.debugScreen.visible = true
        m.debugScreen.setFocus(true)
    end if
end sub
