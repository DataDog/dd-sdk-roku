' Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.
' This product includes software developed at Datadog (https://www.datadoghq.com/).
' Copyright 2022-Today Datadog, Inc.

import "pkg:/source/exploding.bs"
import "pkg:/source/roku_modules/datadogroku/datadogSdk.brs"
import "pkg:/source/roku_modules/datadogroku/internalLogger.brs"
import "pkg:/source/roku_modules/datadogroku/timeUtils.brs"

sub init()
    datadogroku_ddLogThread("DebugScreen.init()")

    m.msgLabel = m.top.findNode("messageLabel")
    m.items = [
        "Start View",
        "Stop View",
        "Add Click Action",
        "Add Custom Action",
        "Add Error",
        "Add Resource",
        "Send Logs",
        "Send Config Telemetry",
        "Send Error Telemetry",
        "Send Debug Telemetry",
        "Crash channel"
    ]

    m.debugLabelList = m.top.findNode("debugLabelList")
    m.debugLabelList.observeField("itemSelected", "onItemSelected")
    list = CreateObject("RoSGNode", "ContentNode")

    for each item in m.items
        node = list.createChild("ContentNode")
        node.title = item
    end for
    m.debugLabelList.content = list

    m.top.observeField("focusedChild", "onFocused")

    m.errorIdx = Rnd(100)
end sub

sub onFocused()
    m.debugLabelList.setFocus(true)
end sub

sub onItemSelected()
    datadogroku_ddLogThread("onItemSelected")
    itemSelected = m.debugLabelList.itemSelected
    item = m.items[itemSelected]

    dateTime = CreateObject("roDateTime")
    dateTime.ToLocalTime()

    m.msgLabel.text = "Clicked on " + item + " at " + dateTime.ToISOString()
    m.global.datadogRumAgent@.addAction({
        target: "Debug::Button#" + itemSelected.toStr(),
        type: "click"
    })

    if (itemSelected = 0)
        startView()
    else if (itemSelected = 1)
        stopView()
    else if (itemSelected = 2)
        sendCustomAction()
    else if (itemSelected = 3)
        sendClickAction()
    else if (itemSelected = 4)
        sendError()
    else if (itemSelected = 5)
        sendResource()
    else if (itemSelected = 6)
        sendLogs()
    else if (itemSelected = 7)
        sendErrorTelemetry()
    else if (itemSelected = 8)
        sendErrorTelemetry()
    else if (itemSelected = 9)
        sendDebugTelemetry()
    else if (itemSelected = 10)
        sendCrash()
    end if
end sub

sub startView()
    viewName = "CustomScreen"
    viewUrl = "http://example.com/components/CustomScreen.brs"
    m.global.datadogRumAgent@.startView(viewName, viewUrl, { custom_view_start: Rnd(100) })
end sub

sub stopView()
    viewName = "CustomScreen"
    viewUrl = "http://example.com/components/CustomScreen.brs"
    m.global.datadogRumAgent@.stopView(viewName, viewUrl, { custom_view_stop: Rnd(100) })
end sub

sub sendError()
    m.errorIdx++
    try
        datadogroku_ddLogWarning("About to explode (controlled)")
        explodingMethod(m.errorIdx)
    catch error
        datadogroku_ddLogError("Caught something", error)
        m.global.datadogRumAgent@.addError(error, { custom_add_error: Rnd(100) })
    end try
end sub

sub sendClickAction()
    m.global.datadogRumAgent@.addAction({
        target: "Some target",
        type: "click"
    }, { custom_add_action: Rnd(100) })
end sub

sub sendCustomAction()
    m.global.datadogRumAgent@.addAction({
        target: "Some target",
        type: "custom"
    }, { custom_add_action: Rnd(100) })
end sub

sub sendCrash()
    datadogroku_ddLogWarning("About to explode")
    explodingMethod(m.errorIdx)
end sub

sub sendResource()
    task = createObject("roSGNode", "RequestTask")
    task.setField("query", "datadog")
    task.control = "RUN"
end sub

sub sendLogs()
    m.global.datadogLogsAgent@.logOk("Some log", {})
    m.global.datadogLogsAgent@.logError("Some log", {})
    m.global.datadogLogsAgent@.logWarn("Some log", {})
end sub

sub sendConfigTelemetry()
    m.global.datadogRumAgent@.addConfigTelemetry({ sessionSampleRate: 100 })
end sub

sub sendErrorTelemetry()
    m.errorIdx++
    try
        datadogroku_ddLogWarning("About to explode")
        explodingMethod(m.errorIdx)
    catch error
        datadogroku_ddLogError("Caught something", error)
        m.global.datadogRumAgent@.addErrorTelemetry(error)
    end try
end sub

sub sendDebugTelemetry()
    m.global.datadogRumAgent@.addDebugTelemetry("Some debug log")
end sub
