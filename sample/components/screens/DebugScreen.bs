' Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.
' This product includes software developed at Datadog (https://www.datadoghq.com/).
' Copyright 2022-Today Datadog, Inc.

import "pkg:/source/exploding.bs"
import "pkg:/source/roku_modules/datadogroku/datadogSdk.brs"
import "pkg:/source/roku_modules/datadogroku/internalLogger.brs"
import "pkg:/source/roku_modules/datadogroku/timeUtils.brs"

sub init()
    datadogroku_ddLogThread("DebugScreen.init()")

    m.msgLabel = m.top.findNode("messageLabel")
    m.buttons = ["Start View", "Stop View", "Add error", "Add Resource", "Send logs", "Send Config Telemetry", "Send Error Telemetry", "Send Debug Telemetry"]

    m.debugButtonGroup = m.top.findNode("debugButtonGroup")
    m.debugButtonGroup.observeField("buttonSelected", "onBtnSelected")
    m.debugButtonGroup.buttons = m.buttons

    m.top.observeField("focusedChild", "onFocused")

    m.errorIdx = 0
end sub

sub onFocused()
    m.debugButtonGroup.setFocus(true)
end sub

sub onBtnSelected()
    dateTime = CreateObject("roDateTime")
    dateTime.ToLocalTime()

    m.msgLabel.text = "Clicked on Button" + Str(m.debugButtonGroup.buttonSelected) + " at " + dateTime.ToISOString()
    addAction("Debug::Button#" + m.debugButtonGroup.buttonSelected.toStr(), "click")

    if (m.debugButtonGroup.buttonSelected = 0)
        startView()
    else if (m.debugButtonGroup.buttonSelected = 1)
        stopView()
    else if (m.debugButtonGroup.buttonSelected = 2)
        sendError()
    else if (m.debugButtonGroup.buttonSelected = 3)
        sendResource()
    else if (m.debugButtonGroup.buttonSelected = 4)
        sendLogs()
    else if (m.debugButtonGroup.buttonSelected = 5)
        sendErrorTelemetry()
    else if (m.debugButtonGroup.buttonSelected = 6)
        sendErrorTelemetry()
    else if (m.debugButtonGroup.buttonSelected = 7)
        sendDebugTelemetry()
    end if
end sub

sub startView()
    viewName = "MainScreen"
    viewUrl = "http://example.com/components/MainScreen.brs"
    m.global.datadogRumAgent@.startView(viewName, viewUrl)
end sub

sub stopView()
    viewName = "MainScreen"
    viewUrl = "http://example.com/components/MainScreen.brs"
    m.global.datadogRumAgent@.stopView(viewName, viewUrl)
end sub

sub sendError()
    m.errorIdx++
    try
        datadogroku_ddLogWarning("About to explode")
        explodingMethod(m.errorIdx)
    catch error
        datadogroku_ddLogError("Caught something", error)
        m.global.datadogRumAgent@.addError(error)
    end try
end sub

sub sendResource()
    task = createObject("roSGNode", "RequestTask")
    task.setField("query", "datadog")
    task.control = "RUN"
end sub

sub addAction(target as string, actionType as string)
    m.global.datadogRumAgent@.addAction({
        target: target,
        type: actionType
    })
end sub

sub sendLogs()
    m.global.datadogLogsAgent@.logOk("Some log", {})
    m.global.datadogLogsAgent@.logError("Some log", {})
    m.global.datadogLogsAgent@.logWarn("Some log", {})
end sub

sub sendConfigTelemetry()
    m.global.datadogRumAgent@.addConfigTelemetry({ sessionSampleRate: 100 })
end sub

sub sendErrorTelemetry()
    m.errorIdx++
    try
        datadogroku_ddLogWarning("About to explode")
        explodingMethod(m.errorIdx)
    catch error
        datadogroku_ddLogError("Caught something", error)
        m.global.datadogRumAgent@.addErrorTelemetry(error)
    end try
end sub

sub sendDebugTelemetry()
    m.global.datadogRumAgent@.addDebugTelemetry("Some debug log")
end sub
