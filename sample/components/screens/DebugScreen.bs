' Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.
' This product includes software developed at Datadog (https://www.datadoghq.com/).
' Copyright 2022-Today Datadog, Inc.

import "pkg:/source/exploding.bs"
import "pkg:/source/roku_modules/datadogroku/datadogSdk.brs"
import "pkg:/source/roku_modules/datadogroku/internalLogger.brs"
import "pkg:/source/roku_modules/datadogroku/timeUtils.brs"

sub init()
    datadogroku_logThread("DebugScreen.init()")
    m.titleLabel = m.top.findNode("titleLabel")
    m.msgLabel = m.top.findNode("messageLabel")
    m.titleLabel.font.size = 64

    m.ButtonGroup = m.top.findNode("mainButtonGroup")
    m.ButtonGroup.observeField("buttonSelected", "onBtnSelected")

    m.errorIdx = 0
end sub

function onKeyEvent(key as string, press as boolean) as boolean
    datadogroku_logVerbose("DebugScreen.onKeyEvent(" + key + ", " + press.toStr() + ")")
    if (not press)
        addAction(key, "custom")
    end if
    return false
end function

sub onBtnSelected()
    m.msgLabel.text = "Clicked on Button" + Str(m.ButtonGroup.buttonSelected)
    addAction("Button#" + m.ButtonGroup.buttonSelected.toStr(), "click")

    if (m.ButtonGroup.buttonSelected = 0)
        startView()
    else if (m.ButtonGroup.buttonSelected = 1)
        stopView()
    else if (m.ButtonGroup.buttonSelected = 2)
        sendError()
    else if (m.ButtonGroup.buttonSelected = 3)
        sendResource()
    end if
end sub

sub startView()
    viewName = "MainScreen"
    viewUrl = "http://example.com/components/MainScreen.brs"
    m.global.rumAgent@.startView(viewName, viewUrl)
end sub

sub stopView()
    viewName = "MainScreen"
    viewUrl = "http://example.com/components/MainScreen.brs"
    m.global.rumAgent@.stopView(viewName, viewUrl)
end sub

sub sendError()
    m.errorIdx++
    try
        datadogroku_logWarning("About to explode")
        explodingMethod(m.errorIdx)
    catch error
        datadogroku_logError("Caught something", error)
        m.global.rumAgent@.addError(error)
    end try
end sub

sub sendResource()
    task = createObject("roSGNode", "RequestTask")
    task.setField("query", "datadog")
    task.setField("rumAgent", m.global.rumAgent)
    task.control = "RUN"
end sub

sub addAction(target as string, actionType as string)
    m.global.rumAgent@.addAction({
        target: target,
        type: actionType
    })
end sub
