' Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.
' This product includes software developed at Datadog (https://www.datadoghq.com/).
' Copyright 2022-Today Datadog, Inc.

'----------------------------------------------------------------
' Main setup function.
' @return (object) a configured TestSuite object.
'----------------------------------------------------------------
function TestSuite__Datadog() as object
    this = BaseTestSuite()
    this.Name = "Datadog"

    this.addTest("WhenGetChannelServiceName_ThenReturnServiceName", DatadogTest__WhenGetChannelServiceName_ThenReturnServiceName)
    this.addTest("WhenGetChannelVersion_ThenReturnVersion", DatadogTest__WhenGetChannelVersion_ThenReturnVersion)

    this.addTest("WhenGetEndpointUS1_ThenCreateEndpoint", DatadogTest__WhenGetEndpointUS1_ThenCreateEndpoint)
    this.addTest("WhenGetEndpointUS3_ThenCreateEndpoint", DatadogTest__WhenGetEndpointUS3_ThenCreateEndpoint)
    this.addTest("WhenGetEndpointUS5_ThenCreateEndpoint", DatadogTest__WhenGetEndpointUS5_ThenCreateEndpoint)
    this.addTest("WhenGetEndpointEU1_ThenCreateEndpoint", DatadogTest__WhenGetEndpointEU1_ThenCreateEndpoint)
    this.addTest("WhenGetEndpointAP1_ThenCreateEndpoint", DatadogTest__WhenGetEndpointAP1_ThenCreateEndpoint)

    this.addTest("WhenGetEndpointStaging_ThenCreateEndpoint", DatadogTest__WhenGetEndpointStaging_ThenCreateEndpoint)

    this.addTest("WhenGetEndpointRumUnknown_ThenCreateEndpoint", DatadogTest__WhenGetEndpointRumUnknown_ThenCreateEndpoint)

    return this
end function

'----------------------------------------------------------------
' Given: a channel
'  When: asking for the channel service name
'  Then: the sanitized service from the manifest
'----------------------------------------------------------------
function DatadogTest__WhenGetChannelServiceName_ThenReturnServiceName() as string
    ' When
    serviceName = datadogRoku_channelServiceName()

    ' Then
    Assert.that(serviceName).isEqualTo("datadog__test-channel__42.1/k_")
    return ""
end function

'----------------------------------------------------------------
' Given: a channel
'  When: asking for the channel version
'  Then: the correct version from the manifest
'----------------------------------------------------------------
function DatadogTest__WhenGetChannelVersion_ThenReturnVersion() as string

    ' When
    version = datadogRoku_channelVersion()

    ' Then
    Assert.that(version).isEqualTo("4.8.15")
    return ""
end function

'----------------------------------------------------------------
' Given: a us1 site
'  When: asking for the endpoint
'  Then: the correct endpoint is returned
'----------------------------------------------------------------
function DatadogTest__WhenGetEndpointUS1_ThenCreateEndpoint() as string
    ' Given
    site = "us1"

    ' When
    endpoint = datadogroku_getEndpoint(site)

    ' Then
    Assert.that(endpoint).isEqualTo("https://browser-intake-datadoghq.com")
    return ""
end function

'----------------------------------------------------------------
' Given: a us3 site
'  When: asking for the endpoint
'  Then: the correct endpoint is returned
'----------------------------------------------------------------
function DatadogTest__WhenGetEndpointUS3_ThenCreateEndpoint() as string
    ' Given
    site = "us3"

    ' When
    endpoint = datadogroku_getEndpoint(site)

    ' Then
    Assert.that(endpoint).isEqualTo("https://browser-intake-us3-datadoghq.com")
    return ""
end function

'----------------------------------------------------------------
' Given: a us5 site
'  When: asking for the endpoint
'  Then: the correct endpoint is returned
'----------------------------------------------------------------
function DatadogTest__WhenGetEndpointUS5_ThenCreateEndpoint() as string
    ' Given
    site = "us5"

    ' When
    endpoint = datadogroku_getEndpoint(site)

    ' Then
    Assert.that(endpoint).isEqualTo("https://browser-intake-us5-datadoghq.com")
    return ""
end function

'----------------------------------------------------------------
' Given: a eu1 site
'  When: asking for the endpoint
'  Then: the correct endpoint is returned
'----------------------------------------------------------------
function DatadogTest__WhenGetEndpointEU1_ThenCreateEndpoint() as string
    ' Given
    site = "eu1"

    ' When
    endpoint = datadogroku_getEndpoint(site)

    ' Then
    Assert.that(endpoint).isEqualTo("https://browser-intake-datadoghq.eu")
    return ""
end function

'----------------------------------------------------------------
' Given: a eu1 site
'  When: asking for the endpoint
'  Then: the correct endpoint is returned
'----------------------------------------------------------------
function DatadogTest__WhenGetEndpointAP1_ThenCreateEndpoint() as string
    ' Given
    site = "ap1"

    ' When
    endpoint = datadogroku_getEndpoint(site)

    ' Then
    Assert.that(endpoint).isEqualTo("https://browser-intake-ap1-datadoghq.com")
    return ""
end function

'----------------------------------------------------------------
' Given: a staging site
'  When: asking for the endpoint
'  Then: the correct endpoint is returned
'----------------------------------------------------------------
function DatadogTest__WhenGetEndpointStaging_ThenCreateEndpoint() as string
    ' Given
    site = "staging"

    ' When
    endpoint = datadogroku_getEndpoint(site)

    ' Then
    Assert.that(endpoint).isEqualTo("https://browser-intake-datad0g.com")
    return ""
end function

'----------------------------------------------------------------
' Given: an unknown site
'  When: asking for the endpoint
'  Then: the correct endpoint is returned
'----------------------------------------------------------------
function DatadogTest__WhenGetEndpointRumUnknown_ThenCreateEndpoint() as string
    ' Given
    site = IG_GetString(8)

    ' When
    endpoint = datadogroku_getEndpoint(site)

    ' Then
    Assert.that(endpoint).isEqualTo("")
    return ""
end function
